<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>My Orders | Aromix</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
</head>
<body class="bg-light">

  <!-- Header -->
  <%- include('../../partials/header') %>

  <div class="container my-4">
    <div class="row">
      
      <!-- Sidebar -->
      <div class="col-md-3 mb-3">
        <%- include('../partials/side-bar') %>
      </div>

      <!-- Orders Main Section -->
      <div class="col-md-9">
        
        <!-- Breadcrumb -->
        <nav aria-label="breadcrumb">
          <ol class="breadcrumb">
            <li class="breadcrumb-item">
              <a href="/users-profile/profile-front/<%- currentUser._id %>" class="text-decoration-none text-secondary">My Profile</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page"><strong>My Orders</strong></li>
          </ol>
        </nav>

        <div class="card shadow-sm p-4">
          <div class="d-flex justify-content-between align-items-center mb-4">
            <h5 class="fw-bold text-danger mb-0">My Orders</h5>
            <span class="text-muted">Total: <%= totalOrders %> orders</span>
          </div>

          <!-- Search Bar -->
          <div class="row mb-4">
            <div class="col-md-6">
              <form method="GET" class="d-flex">
                <input type="text" name="search" value="<%= search %>" class="form-control me-2" placeholder="Search by Order ID...">
                <button type="submit" class="btn btn-outline-secondary">
                  <i class="bi bi-search"></i>
                </button>
                <% if (search) { %>
                  <a href="/user-oder/order-front" class="btn btn-outline-danger ms-2">Clear</a>
                <% } %>
              </form>
            </div>
          </div>

          <% if (orders.length === 0) { %>
            <div class="text-center py-5">
              <i class="bi bi-box-seam fs-1 text-muted mb-3"></i>
              <h5 class="text-muted">No orders found</h5>
              <p class="text-muted">You haven't placed any orders yet.</p>
              <a href="/users-products/discover" class="btn btn-danger">Start Shopping</a>
            </div>
          <% } else { %>
            
            <!-- Orders List -->
            <div class="row">
              <% orders.forEach(order => { %>
                <div class="col-12 mb-4">
                  <div class="card border-0 shadow-sm">
                    <div class="card-header bg-white border-bottom">
                      <div class="row align-items-center">
                        <div class="col-md-6">
                          <h6 class="mb-1 fw-bold">Order #<%= order.orderId %></h6>
                          <small class="text-muted">
                            <i class="bi bi-calendar3 me-1"></i>
                            <%= new Date(order.createdAt).toLocaleDateString('en-IN', { 
                              year: 'numeric', 
                              month: 'long', 
                              day: 'numeric',
                              hour: '2-digit',
                              minute: '2-digit'
                            }) %>
                          </small>
                        </div>
                        <div class="col-md-3 text-center">
                          <span class="badge bg-<%= 
                            order.orderStatus === 'Delivered' ? 'success' :
                            order.orderStatus === 'Cancelled' ? 'danger' :
                            order.orderStatus === 'Shipped' ? 'info' :
                            order.orderStatus === 'Out for Delivery' ? 'warning' :
                            'secondary'
                          %>">
                            <%= order.orderStatus %>
                          </span>
                        </div>
                        <div class="col-md-3 text-end">
                          <h6 class="fw-bold text-success mb-0">â‚¹<%= order.grandTotal %></h6>
                        </div>
                      </div>
                    </div>
                    
                    <div class="card-body">
                      <!-- Order Items Preview -->
                      <div class="row mb-3">
                        <% order.items.slice(0, 2).forEach(item => { %>
                          <div class="col-md-6 mb-2">
                            <div class="d-flex align-items-center">
                              <img src="<%= item.variant && item.variant.images && item.variant.images.length > 0 ? item.variant.images[0] : '/images/no-image.png' %>" 
                                   alt="<%= item.productId.name %>" 
                                   class="rounded me-2" style="width: 50px; height: 50px; object-fit: cover;">
                              <div>
                                <small class="fw-bold d-block"><%= item.productId.name %></small>
                                <small class="text-muted">Qty: <%= item.quantity %> | <%= item.variant ? item.variant.volume + 'ml' : 'N/A' %></small>
                                <% if (item.cancelStatus === 'Cancelled') { %>
                                  <small class="text-danger d-block">Cancelled</small>
                                <% } %>
                              </div>
                            </div>
                          </div>
                        <% }) %>
                        <% if (order.items.length > 2) { %>
                          <div class="col-12">
                            <small class="text-muted">+<%= order.items.length - 2 %> more items</small>
                          </div>
                        <% } %>
                      </div>

                      <!-- Action Buttons -->
                      <div class="d-flex justify-content-between align-items-center">
                        <div>
                          <button class="btn btn-outline-primary btn-sm" onclick="viewOrderDetails('<%= order._id %>')">
                            <i class="bi bi-eye me-1"></i>View Details
                          </button>
                          
                          <% if (order.orderStatus === 'Delivered') { %>
                            <button class="btn btn-outline-warning btn-sm ms-2" onclick="requestReturn('<%= order._id %>')">
                              <i class="bi bi-arrow-return-left me-1"></i>Request Return
                            </button>
                            <button class="btn btn-outline-success btn-sm ms-2" onclick="downloadInvoice('<%= order._id %>')">
                              <i class="bi bi-download me-1"></i>Download Invoice
                            </button>
                          <% } %>
                          
                          <% if (order.orderStatus === 'Pending') { %>
                            <button class="btn btn-outline-danger btn-sm ms-2" onclick="cancelOrder('<%= order._id %>')">
                              <i class="bi bi-x-circle me-1"></i>Cancel Order
                            </button>
                          <% } %>
                        </div>
                        
                        <div class="text-end">
                          <small class="text-muted d-block">Items: <%= order.items.length %></small>
                          <small class="text-muted">Payment: <%= order.paymentMethod %></small>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              <% }) %>
            </div>

            <!-- Pagination -->
            <% if (totalPages > 1) { %>
              <nav aria-label="Order pagination" class="mt-4">
                <ul class="pagination justify-content-center">
                  <% if (hasPrevPage) { %>
                    <li class="page-item">
                      <a class="page-link" href="?page=<%= prevPage %><%= search ? '&search=' + search : '' %>">
                        <i class="bi bi-chevron-left"></i> Previous
                      </a>
                    </li>
                  <% } %>
                  
                  <% for (let i = 1; i <= totalPages; i++) { %>
                    <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                      <a class="page-link" href="?page=<%= i %><%= search ? '&search=' + search : '' %>"><%= i %></a>
                    </li>
                  <% } %>
                  
                  <% if (hasNextPage) { %>
                    <li class="page-item">
                      <a class="page-link" href="?page=<%= nextPage %><%= search ? '&search=' + search : '' %>">
                        Next <i class="bi bi-chevron-right"></i>
                      </a>
                    </li>
                  <% } %>
                </ul>
              </nav>
            <% } %>
          <% } %>
        </div>
      </div>
    </div>
  </div>

  <!-- Order Details Modal -->
  <div class="modal fade" id="orderDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Order Details</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body" id="orderDetailsContent">
          <!-- Content will be loaded here -->
        </div>
      </div>
    </div>
  </div>

  <!-- Cancel Order Modal -->
  <div class="modal fade" id="cancelOrderModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Cancel Order</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <p class="text-muted mb-3">Please provide a reason for cancelling this order:</p>
          <textarea id="cancelReason" class="form-control" rows="3" placeholder="Enter cancellation reason..."></textarea>
          <div id="cancelError" class="text-danger mt-2" style="min-height: 1em;"></div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-danger" id="confirmCancelBtn">Cancel Order</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Cancel Order Item Modal -->
  <div class="modal fade" id="cancelOrderItemModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Cancel Order Item</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <p class="text-muted mb-3">Please provide a reason for cancelling this item:</p>
          <textarea id="cancelItemReason" class="form-control" rows="3" placeholder="Enter cancellation reason..."></textarea>
          <div id="cancelItemError" class="text-danger mt-2" style="min-height: 1em;"></div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-danger" id="confirmCancelItemBtn">Cancel Item</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Return Request Modal -->
  <div class="modal fade" id="returnRequestModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Request Return</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body">
          <p class="text-muted mb-3">Please provide a reason for returning this order:</p>
          <textarea id="returnReason" class="form-control" rows="3" placeholder="Enter return reason..."></textarea>
          <div id="returnError" class="text-danger mt-2" style="min-height: 1em;"></div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-warning" id="confirmReturnBtn">Request Return</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Footer -->
  <%- include('../../partials/footer') %>

  <!-- Toast Container -->
  <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 1055"></div>

  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  
  <script>
    let currentOrderId = null;
    let currentVariantId = null;

    function showToast(message, type = "primary") {
      const toast = document.createElement("div");
      toast.className = `toast align-items-center text-white bg-${type} border-0 show position-fixed bottom-0 end-0 m-3`;
      toast.role = "alert";
      toast.style.zIndex = "1055";
      toast.style.minWidth = "300px";
      toast.innerHTML = `
        <div class="d-flex">
          <div class="toast-body">${message}</div>
          <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
        </div>`;
      document.body.appendChild(toast);
      setTimeout(() => toast.remove(), 3000);
    }

    async function viewOrderDetails(orderId) {
      try {
        const response = await axios.get(`/user-oder/order-details/${orderId}`);
        if (response.data.success) {
          document.getElementById('orderDetailsContent').innerHTML = response.data.html;
          const modal = new bootstrap.Modal(document.getElementById('orderDetailsModal'));
          modal.show();
        }
      } catch (err) {
        showToast(err.response?.data?.message || "Error loading order details", "danger");
      }
    }

    function cancelOrder(orderId) {
      currentOrderId = orderId;
      const modal = new bootstrap.Modal(document.getElementById('cancelOrderModal'));
      modal.show();
    }

    function cancelOrderItem(orderId, variantId) {
      currentOrderId = orderId;
      currentVariantId = variantId;
      const modal = new bootstrap.Modal(document.getElementById('cancelOrderItemModal'));
      modal.show();
    }

    function requestReturn(orderId) {
      currentOrderId = orderId;
      const modal = new bootstrap.Modal(document.getElementById('returnRequestModal'));
      modal.show();
    }

    async function downloadInvoice(orderId) {
      try {
        const response = await axios.get(`/user-oder/download-invoice/${orderId}`, {
          responseType: 'blob'
        });
        
        const blob = new Blob([response.data], { type: 'application/pdf' });
        const url = window.URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.href = url;
        link.download = `invoice-${orderId}.pdf`;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        window.URL.revokeObjectURL(url);
        
        showToast("Invoice downloaded successfully", "success");
      } catch (err) {
        showToast("Error downloading invoice", "danger");
      }
    }

    // Cancel Order Confirmation
    document.getElementById('confirmCancelBtn').addEventListener('click', async () => {
      const reason = document.getElementById('cancelReason').value.trim();
      const errorDiv = document.getElementById('cancelError');
      
      if (!reason) {
        errorDiv.textContent = "Please provide a cancellation reason";
        return;
      }
      
      errorDiv.textContent = "";
      
      try {
        const response = await axios.post(`/user-oder/cancel-order/${currentOrderId}`, { reason });
        if (response.data.success) {
          showToast("Order cancelled successfully", "success");
          const modal = bootstrap.Modal.getInstance(document.getElementById('cancelOrderModal'));
          modal.hide();
          document.getElementById('cancelReason').value = "";
          setTimeout(() => location.reload(), 1500);
        }
      } catch (err) {
        showToast(err.response?.data?.message || "Error cancelling order", "danger");
      }
    });

    // Cancel Order Item Confirmation
    document.getElementById('confirmCancelItemBtn').addEventListener('click', async () => {
      const reason = document.getElementById('cancelItemReason').value.trim();
      const errorDiv = document.getElementById('cancelItemError');
      
      if (!reason) {
        errorDiv.textContent = "Please provide a cancellation reason";
        return;
      }
      
      errorDiv.textContent = "";
      
      try {
        const response = await axios.post(`/user-oder/cancel-order-item/${currentOrderId}/${currentVariantId}`, { reason });
        if (response.data.success) {
          showToast(response.data.message, "success");
          const modal = bootstrap.Modal.getInstance(document.getElementById('cancelOrderItemModal'));
          modal.hide();
          document.getElementById('cancelItemReason').value = "";
          
          if (response.data.orderCancelled) {
            showToast("All items cancelled. Order has been cancelled.", "warning");
          }
          
          setTimeout(() => location.reload(), 1500);
        }
      } catch (err) {
        showToast(err.response?.data?.message || "Error cancelling item", "danger");
      }
    });

    // Return Request Confirmation
    document.getElementById('confirmReturnBtn').addEventListener('click', async () => {
      const reason = document.getElementById('returnReason').value.trim();
      const errorDiv = document.getElementById('returnError');
      
      if (!reason) {
        errorDiv.textContent = "Please provide a return reason";
        return;
      }
      
      errorDiv.textContent = "";
      
      try {
        const response = await axios.post(`/user-oder/request-return/${currentOrderId}`, { reason });
        if (response.data.success) {
          showToast("Return request submitted successfully", "success");
          const modal = bootstrap.Modal.getInstance(document.getElementById('returnRequestModal'));
          modal.hide();
          document.getElementById('returnReason').value = "";
          setTimeout(() => location.reload(), 1500);
        }
      } catch (err) {
        showToast(err.response?.data?.message || "Error submitting return request", "danger");
      }
    });
  </script>
</body>
</html>
