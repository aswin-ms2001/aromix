<!DOCTYPE html>
<html lang="en">
<head>
  <title><%= product.name %> | Aromix</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
  <link rel="stylesheet" href="/css/user-css/productDetails.css">
</head>
<body>

<%- include('./partials/header') %>

<div class="container py-5 product-page">
  <nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="/" class="text-decoration-none text-dark">Home</a></li>
      <li class="breadcrumb-item"><a href="/users-products/discover" class="text-decoration-none text-dark">Discover</a></li>
      <li class="breadcrumb-item active" aria-current="page"><%= product.name %></li>
    </ol>
  </nav>
  
  <div class="row">
    <!-- Thumbnails -->
    <div class="col-md-2 d-flex justify-content-center">
      <div class="thumbnail-wrapper" id="thumbnail-wrapper">
        <% product.variants[0].images.forEach((image, index) => { %>
          <img src="<%= image %>" class="thumbnail-image" onclick="updateMainImage('<%= image %>')" alt="Thumbnail <%= index + 1 %>">
        <% }) %>
      </div>
    </div>

    <!-- Main Image -->
    <div class="col-md-5">
      <div class="main-image-container">
        <img id="main-product-image" src="<%= product.variants[0].images[0] %>" alt="Main Image" class="main-image">
      </div>
    </div>

    <!-- Product Info -->
    <div class="col-md-5">
      <div class="d-flex align-items-center justify-content-between">
        <h4 id="product-name" class="me-3"><%= product.name %></h4>
        <button id="wishlist-btn" class="btn btn-outline-danger" title="Add to Wishlist">
          <i class="bi bi-heart" id="wishlist-icon"></i>
        </button>
      </div>

      <p class="text-muted">
        (150 Reviews) |
        <span id="stock-status" class="<%= product.variants[0].stock > 0 ? 'text-success' : 'text-danger' %>">
          <%= product.variants[0].stock > 0 ? 'In Stock' : 'Out of Stock' %> 
          (<span id="stock-count"><%= product.variants[0].stock %></span>)
        </span>
      </p>
      <h5 id="product-price">₹<%= product.variants[0].price %></h5>
      <p class="product-description" id="product-description"><%= product.variants[0].description %></p>

      <!-- Variant Carousel -->
      <div class="mb-3">
        <label class="form-label fw-semibold">Variants:</label>
        <div id="variantCarousel" class="carousel slide" data-bs-ride="carousel">
          <div class="carousel-inner d-flex align-items-center">
            <% product.variants.forEach((variant, index) => { %>
              <div class="carousel-item <%= index === 0 ? 'active' : '' %>">
                <div class="d-flex gap-2 justify-content-center">
                  <button class="btn btn-outline-dark btn-sm variant-btn" data-index="<%= index %>">
                    <%= variant.volume %> ml Pack
                  </button>
                </div>
              </div>
            <% }) %>
          </div>
          <% if (product.variants.length > 1) { %>
            <button class="carousel-control-prev" type="button" data-bs-target="#variantCarousel" data-bs-slide="prev">
              <span class="carousel-control-prev-icon"></span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#variantCarousel" data-bs-slide="next">
              <span class="carousel-control-next-icon"></span>
            </button>
          <% } %>
        </div>
      </div>

      <div class="mb-3 d-flex gap-2">
        <!-- <button class="btn btn-danger" id="buy-now-btn">Buy Now</button> -->
        <button class="btn btn-warning" id="add-to-cart-btn">Add To Cart</button>
      </div>

      <div class="input-group w-50 mb-4">
        <button class="btn btn-outline-secondary">-</button>
        <input type="text" class="form-control text-center" value="1">
        <button class="btn btn-outline-secondary">+</button>
      </div>

      <div class="border p-3 rounded bg-light">
        <p><strong>Free Delivery</strong><br>Enter your postal code for delivery availability</p>
        <hr>
        <p><strong>Return Delivery</strong><br>Free 30 Days Delivery Returns. Details</p>
      </div>
    </div>
  </div>

  <!-- Related Items -->
  <div class="mt-5">
    <h5 class="mb-4">Related Items</h5>
    <% if (relatedProducts && relatedProducts.length > 0) { %>
      <div class="row row-cols-1 row-cols-sm-2 row-cols-md-4 g-4">
        <% relatedProducts.forEach(product => { %>
          <% const variant = product.variants[0]; %>
          <% if (variant) { %>
            <div class="col">
              <a href="/users-products/products/<%= product._id %>" class="text-decoration-none text-dark">
                <div class="card h-100 shadow-sm">
                  <img src="<%= variant.images[0] %>" class="card-img-top" alt="<%= product.name %>">
                  <div class="card-body">
                    <h6 class="fw-bold"><%= product.name %></h6>
                    <p class="mb-1"><%= variant.volume %> ml</p>
                    <p class="text-danger fw-semibold">₹<%= variant.price %></p>
                  </div>
                </div>
              </a>
            </div>
          <% } %>
        <% }) %>
      </div>
    <% } else { %>
      <div class="alert alert-warning">No products are available at the moment.</div>
    <% } %>
  </div>
</div>

<%- include('./partials/footer') %>

<div id="toast-container" style="
    position: fixed;
    bottom: 1rem;
    right: 1rem;
    z-index: 1055;
    display: flex;
    flex-direction: column;
    gap: 10px;
"></div>

<script>
  window.addEventListener("pageshow", function (event) {
    if (event.persisted) {
      window.location.reload();
    }
  });
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<!-- Inject Wishlist & Product Data -->
<script type="application/json" id="wishlist-data">
  <%- JSON.stringify(wishlistVariantIds || []) %>
</script>
<script type="application/json" id="product-data">
  <%- JSON.stringify(product) %>
</script>

<script type="application/json" id="variantId-data">
  <%- JSON.stringify(variantId) %>
</script>
<!-- JS Logic -->
<script>
  document.addEventListener("DOMContentLoaded",()=>{
  const product = JSON.parse(document.getElementById('product-data').textContent);
  const wishlistVariantIds = JSON.parse(document.getElementById('wishlist-data').textContent);
  const variantId = JSON.parse(document.getElementById('variantId-data').textContent);
  const variants = product.variants;
  console.log(variants)
  console.log(variantId)
  let currentIndex = 0;

  const priceEl = document.getElementById("product-price");
  const descEl = document.getElementById("product-description");
  const stockEl = document.getElementById("stock-status");
  const mainImage = document.getElementById("main-product-image");
  const thumbnailWrapper = document.getElementById("thumbnail-wrapper");
  const variantBtns = document.querySelectorAll(".variant-btn");
  const wishlistBtn = document.getElementById("wishlist-btn");
  const wishlistIcon = document.getElementById("wishlist-icon");

  function updateVariant(index) {
    const variant = variants[index];
    currentIndex = index;

    variantBtns.forEach((btn) => btn.classList.remove("active"));
    const activeBtn = document.querySelector(`.variant-btn[data-index="${index}"]`);
    if (activeBtn) activeBtn.classList.add("active");

    priceEl.textContent = `₹${variant.price}`;
    descEl.textContent = variant.description;
    stockEl.className = variant.stock > 0 ? "text-success" : "text-danger";
    stockEl.innerHTML = `${variant.stock > 0 ? 'In Stock' : 'Out of Stock'} (<span id="stock-count">${variant.stock}</span>)`;

    mainImage.src = variant.images[0];

    thumbnailWrapper.innerHTML = "";
    variant.images.forEach((img, i) => {
      const thumb = document.createElement("img");
      thumb.src = img;
      thumb.className = "thumbnail-image";
      thumb.alt = `Thumbnail ${i + 1}`;
      thumb.onclick = () => { mainImage.src = img; };
      thumbnailWrapper.appendChild(thumb);
    });

    // Wishlist Icon Update
    const isInWishlist = wishlistVariantIds.includes(variant._id);
    wishlistIcon.className = isInWishlist ? "bi bi-heart-fill text-danger" : "bi bi-heart";
    wishlistBtn.title = isInWishlist ? "Remove from Wishlist" : "Add to Wishlist";
  }

  variantBtns.forEach((btn) => {
    btn.addEventListener("click", () => {
      const index = parseInt(btn.dataset.index);
      updateVariant(index);
    });
  });

wishlistBtn.addEventListener("click", async () => {
  const variant = variants[currentIndex];
  const isInWishlist = wishlistVariantIds.includes(variant._id);

  if (isInWishlist) {
    // ✅ Remove from wishlist
    try {
      const response = await axios.delete(`/users-wishlist/delete-from-wishlist/${product._id}/${variant._id}`);
      if (response.data.success) {
        wishlistVariantIds.splice(wishlistVariantIds.indexOf(variant._id), 1);
        showToast(response.data.message || "Item removed from wishlist", "warning");
      }
    } catch (err) {
      if (err.response?.data?.redirect) {
        showToast(err.response.data.message || "Item is blocked", "danger");
        setTimeout(() => (window.location.href = err.response.data.redirect), 2000);
      } else if (err.response?.data?.message) {
        showToast(err.response.data.message, "danger");
      } else {
        showToast("Failed to remove from wishlist", "danger");
      }
    }
  } else {
    // ✅ Add to wishlist
    try {
      const response = await axios.post(`/users-wishlist/add-to-wishlist/${product._id}/${variant._id}`);
      if (response.data.success) {
        wishlistVariantIds.push(variant._id);
        showToast(response.data.message || "Item added to wishlist", "success");
      }
    } catch (err) {
      if (err.response?.data?.redirect) {
        showToast(err.response.data.message || "Item is blocked", "danger");
        setTimeout(() => (window.location.href = err.response.data.redirect), 2000);
      } else if (err.response?.data?.message) {
        showToast(err.response.data.message, "danger");
      } else {
        showToast("An unexpected error occurred", "danger");
      }
    }
  }


  updateVariant(currentIndex);
});

  document.getElementById("add-to-cart-btn").addEventListener("click", async () => {
    const variant = variants[currentIndex];
    const quantity = parseInt(document.querySelector(".form-control.text-center").value);
    console.log("Add to Cart:", variant._id, "Qty:", quantity);
    try{
      console.log(product._id,variant._id)
    const response = await axios.post(`/users-cart/user-add-cart/${product._id}/${variant._id}`);
    if(response.data.success){
      showToast(response.data.message,"success")
    }
    }catch(err){
      if (err.response?.data?.redirect) {
        showToast(err.response.data.message || "Item is blocked", "danger");
        setTimeout(() => (window.location.href = err.response.data.redirect), 2000);
      } else if (err.response?.data?.message) {
        showToast(err.response.data.message, "danger");
      } else {
        showToast("An unexpected error occurred", "danger");
      }
    }
  });

  document.getElementById("buy-now-btn").addEventListener("click", async() => {
    const variant = variants[currentIndex];
    const quantity = parseInt(document.querySelector(".form-control.text-center").value);
    console.log("Buy Now:", variant._id, "Qty:", quantity);

    
  });

function showToast(message, type = "primary", duration = 3000) {
  // ✅ Find or create toast container
  let toastContainer = document.getElementById("toast-container");
  if (!toastContainer) {
    toastContainer = document.createElement("div");
    toastContainer.id = "toast-container";
    toastContainer.className = "toast-container position-fixed top-0 end-0 p-3";
    toastContainer.style.zIndex = "9999";
    document.body.appendChild(toastContainer);
  }

  // ✅ Create toast element
  const toast = document.createElement("div");
  toast.className = `toast align-items-center text-bg-${type} border-0 show`;
  toast.setAttribute("role", "alert");
  toast.setAttribute("aria-live", "assertive");
  toast.setAttribute("aria-atomic", "true");

  toast.innerHTML = `
    <div class="d-flex">
      <div class="toast-body">${message}</div>
      <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
  `;

  toastContainer.appendChild(toast);

  // ✅ Auto-remove after duration
  setTimeout(() => {
    toast.classList.remove("show");
    setTimeout(() => toast.remove(), 300); // Remove after fade-out
  }, duration);
}


  if (variantId) {
    const updateIndex = variants.findIndex(v => v._id === variantId);
    if (updateIndex !== -1) {
      updateVariant(updateIndex);
    } else {
      updateVariant(0); // fallback if no match found
    }
  } else {
    updateVariant(0);
  }
    
  

  })
  
</script>
</body>
</html>
