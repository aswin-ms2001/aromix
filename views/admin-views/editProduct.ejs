<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Edit Product | Aromix</title>

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
  <link href="https://cdn.jsdelivr.net/npm/cropperjs@1.5.13/dist/cropper.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="/css/admin-css/adminProductAdding.css" />
  <link rel="stylesheet" href="/css/admin-css/sidebar.css" />
</head>
<body>
  <div class="admin-layout">
    <%- include('./partials/sidebar') %>

    <div class="admin-main">
      <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-white">Edit Product</h2>
      </div>

      <div class="card p-4" style="background-color: #2e0e46; border-radius: 20px;">
        <form id="product-form" enctype="multipart/form-data" data-product-id="<%= product._id %>">
          <div class="row g-3">
            <div class="col-md-6">
              <label class="form-label text-white">Product Name*</label>
              <input type="text" name="name" class="form-control" value="<%= product.name %>" required />
            </div>
            <div class="col-md-6">
              <label class="form-label text-white">Category*</label>
              <select name="category" class="form-select" required>
                <% categories.forEach(category => { %>
                  <option value="<%= category._id %>::<%= category.name %>" 
                    <%= product.categoryId.toString() === category._id.toString() ? "selected" : "" %>>
                    <%= category.name %>
                  </option>
                <% }); %>
              </select>
            </div>
            <div class="col-md-6">
              <label class="form-label text-white">Gender*</label>
              <select name="gender" class="form-select" required>
                <option value="Male" <%= product.gender === "Male" ? "selected" : "" %>>Male</option>
                <option value="Female" <%= product.gender === "Female" ? "selected" : "" %>>Female</option>
                <option value="Unisex" <%= product.gender === "Unisex" ? "selected" : "" %>>Unisex</option>
              </select>
            </div>
          </div>

          <h5 class="text-white mt-5">Variants</h5>

          <% product.variants.forEach((variant, vIndex) => { %>
            <div class="border p-3 mb-4 rounded" style="background-color: #47195f;">
              <div class="row g-3">
                <div class="row">
                  <div class="col-md-4">
                    <label class="form-label text-white">Volume (ml)</label>
                    <input type="number" name="variants[<%= vIndex %>].volume" value="<%= variant.volume %>" class="form-control" required />
                  </div>
                  <div class="col-md-4">
                    <label class="form-label text-white">Price</label>
                    <input type="number" name="variants[<%= vIndex %>].price" value="<%= variant.price %>" class="form-control" required />
                  </div>
                  <div class="col-md-4">
                    <label class="form-label text-white">Stock</label>
                    <input type="number" name="variants[<%= vIndex %>].stock" value="<%= variant.stock %>" class="form-control" required />
                  </div>
                </div>

                <div class="row g-3">
                  <div class="col-md-12">
                    <label class="form-label text-white">Description</label>
                    <textarea name="variants[<%= vIndex %>].description" class="form-control" required><%= variant.description %></textarea>
                  </div>
                </div>

                <div class="row">
                  <% for (let i = 0; i < 4; i++) { %>
                    <div class="col-md-3">
                      <label class="form-label text-white">Image <%= i + 1 %></label>
                      <% if (variant.images[i]) { %>
                        <div class="mb-2">
                          <img src="<%= variant.images[i] %>" class="img-fluid rounded" style="height: 100px;" />
                          <input type="hidden" name="variants[<%= vIndex %>].existingImages[]" value="<%= variant.images[i] %>" />
                        </div>
                      <% } %>
                      <input type="file"
                             name="variantImages[<%= vIndex %>]"
                             class="form-control variant-image-input"
                             accept="image/*"
                             data-index="<%= vIndex %>-<%= i %>" />
                    </div>
                  <% } %>
                </div>

                <div class="col-12" id="cropped-container-<%= vIndex %>"></div>
              </div>
            </div>
          <% }) %>

          <button type="submit" class="btn btn-primary mt-4">Save Product</button>
        </form>
      </div>
    </div>
  </div>

  <!-- Cropper Modal -->
  <div class="modal fade" id="cropperModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
      <div class="modal-content bg-dark">
        <div class="modal-header">
          <h5 class="modal-title text-white">Crop Image</h5>
          <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
        </div>
        <div class="modal-body text-center">
          <img id="cropper-image" src="" class="img-fluid" style="max-height: 400px;" />
        </div>
        <div class="modal-footer">
          <button type="button" id="crop-image-btn" class="btn btn-success">Crop & Save</button>
        </div>
      </div>
    </div>
  </div>

  <!-- JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.13/dist/cropper.min.js"></script>

  <script>
    let cropper;
    let currentIndex = null;
    const croppedModal = new bootstrap.Modal(document.getElementById('cropperModal'));

    document.querySelectorAll('.variant-image-input').forEach(input => {
      input.addEventListener('change', function (e) {
        const files = Array.from(e.target.files);
        const index = e.target.dataset.index;

        if (files.length > 0) {
          const reader = new FileReader();
          reader.onload = function (event) {
            const image = document.getElementById('cropper-image');
            image.src = event.target.result;
            croppedModal.show();

            image.onload = () => {
              if (cropper) cropper.destroy();
              cropper = new Cropper(image, {
                aspectRatio: 1,
                viewMode: 1
              });
              currentIndex = index;
            };
          };
          reader.readAsDataURL(files[0]);
        }
      });
    });

    document.getElementById('crop-image-btn').addEventListener('click', function () {
      const canvas = cropper.getCroppedCanvas({ width: 600, height: 600 });
      const base64 = canvas.toDataURL("image/jpeg");

      const [variantIndex, imageIndex] = currentIndex.split('-'); // eg: "0-1"
      const container = document.getElementById(`cropped-container-${variantIndex}`);

      const hiddenInput = document.createElement('input');
      hiddenInput.type = 'hidden';
      hiddenInput.name = `variants[${variantIndex}].croppedImages[${imageIndex}]`;
      hiddenInput.value = base64;
      container.appendChild(hiddenInput);

      // Clear the file input to avoid double uploads
      document.querySelector(`input[data-index="${currentIndex}"]`).value = "";

      croppedModal.hide();
    });


    document.getElementById("product-form").addEventListener("submit", async function (e) {
      e.preventDefault();

      const form = e.target;
      const productId = form.dataset.productId;
      const formData = new FormData(form);

      try {
        const response = await fetch(`/products/edit/${productId}`, {
          method: "PUT",
          body: formData
        });

        if (response.ok) {
          alert("Product updated successfully!");
        } else {
          const text = await response.text();
          alert("Update failed: " + text);
        }
      } catch (err) {
        console.error("Error updating product:", err);
        alert("Something went wrong.");
      }
    });
  </script>
</body>
</html>
